
<script type="module">
    import { OrbitControls } from 'https://unpkg.com/three@0.126.1/examples/jsm/controls/OrbitControls.js'
    let scene,camera, renderer;
    
    let canvas

    function resize() {
        var width = canvas.clientWidth;
        var height = canvas.clientHeight;
        if (width != canvas.width || height != canvas.height) {
            renderer.setSize(width, height, false);
            camera.aspect = width / height;
            camera.updateProjectionMatrix();
        }
    }

    function render() {
        resize()
        renderer.render(scene, camera);
        requestAnimationFrame(render);
    }

    export function initSunScene() {
        scene = new THREE.Scene();
        camera = new THREE.PerspectiveCamera(55, 1, 45, 30000);
        camera.position.set(-900, -200, -900)
        
        canvas = document.querySelector("canvas.beautifuck");
        renderer = new THREE.WebGLRenderer({ antialias: true, canvas: canvas });
        let controls = new OrbitControls(camera, canvas)
        controls.addEventListener('change', render);

        let materialsArray = []
        let texture_ft = new THREE.TextureLoader().load('./img/arid2_ft.jpg')
        let texture_bk = new THREE.TextureLoader().load('./img/arid2_bk.jpg')
        let texture_up = new THREE.TextureLoader().load('./img/arid2_up.jpg')
        let texture_dn = new THREE.TextureLoader().load('./img/arid2_dn.jpg')
        let texture_rt = new THREE.TextureLoader().load('./img/arid2_rt.jpg')
        let texture_lf = new THREE.TextureLoader().load('./img/arid2_lf.jpg')

        materialsArray.push(new THREE.MeshBasicMaterial({map: texture_ft}))
        materialsArray.push(new THREE.MeshBasicMaterial({map: texture_bk}))
        materialsArray.push(new THREE.MeshBasicMaterial({map: texture_up}))
        materialsArray.push(new THREE.MeshBasicMaterial({map: texture_dn}))
        materialsArray.push(new THREE.MeshBasicMaterial({map: texture_rt}))
        materialsArray.push(new THREE.MeshBasicMaterial({map: texture_lf}))

        for(let i=0; i<6; i++)
            materialsArray[i].side = THREE.BackSide
            
        let skyboxGeo = new THREE.BoxGeometry(10000, 10000, 10000)
        let skybox = new THREE.Mesh(skyboxGeo, materialsArray)
        scene.add(skybox)
        render()
        return true
    }
    window.initSunScene = initSunScene
</script>
